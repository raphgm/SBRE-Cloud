name: Frontend CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install, Build & Test
        run: |
          cd frontend
          npm install
          npm run build
          npm test

  dockerize-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build & Push Frontend Image
        run: |
          docker build -t rdgmh/frontend:latest ./frontend
          docker push rdgmh/frontend:latest

  deploy:
    needs: dockerize-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Terraform Apply (Frontend)
        run: |
          cd infra/terraform
          terraform init
          terraform apply -auto-approve -target=azurerm_linux_web_app.frontend
        env:
          TF_VAR_docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
          TF_VAR_docker_registry_password: ${{ secrets.DOCKERHUB_TOKEN }}